import{_ as c,o as u,c as i,a as n,d as a,w as t,b as s,e as l,r as e}from"./app.8e88a49f.js";const k={},d=n("h1",{id:"utilities",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#utilities","aria-hidden":"true"},"#"),s(" Utilities")],-1),r=n("p",null,"Quick look at the utilities available",-1),f={class:"table-of-contents"},h=s("TypeOf"),_=l(`<h2 id="typeof" tabindex="-1"><a class="header-anchor" href="#typeof" aria-hidden="true">#</a> TypeOf</h2><p>validate type of the value to match given type</p><blockquote><p>passing any value to <code>typeOf</code> will return a new instance of <code>TypeOf</code> class that has two methods <code>is</code> and <code>not</code> which take the type name as argument and do the type checking magic.</p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code>validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">&quot;nullOrUndefined&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token string">&quot;nullOrUndefined&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre></div>`,4),m=s("To see the list of the supported types and more Checkout "),y=s("TypeOf Utility"),v=s(".");function g(q,O){const o=e("router-link"),p=e("RouterLink");return u(),i("div",null,[d,r,n("nav",f,[n("ul",null,[n("li",null,[a(o,{to:"#typeof"},{default:t(()=>[h]),_:1})])])]),_,n("p",null,[m,a(p,{to:"/utilities/typeof.html"},{default:t(()=>[y]),_:1}),v])])}var x=c(k,[["render",g],["__file","utilities.html.vue"]]);export{x as default};
