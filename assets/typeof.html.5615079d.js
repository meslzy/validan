import{_ as u,o as l,c as i,a as n,d as s,w as t,b as a,e as k,r as c}from"./app.8e88a49f.js";const r={},d=n("h1",{id:"typeof",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#typeof","aria-hidden":"true"},"#"),a(" TypeOf")],-1),f=n("p",null,"Validate type of any value",-1),y={class:"table-of-contents"},g=a("Constructor"),h=a("Basic Usage"),v=a("Types Available"),b=a("String"),m=a("Number"),_=a("Boolean"),O=a("Null"),q=a("Undefined"),w=a("NullOrUndefined"),j=a("Object"),x=a("Array"),C=a("Advanced Usage"),T=a("Override types"),A=a("Clone typeOf instance"),V=k(`<h2 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> Constructor</h2><p>TypeOf is a proxy based object trap for a function call and object properties.</p><blockquote><p>Calling the function <code>typeOf(value)</code> will create new class instance of <code>TypeOf</code> which contains types and value passed from the <code>typeOf proxy</code>.</p></blockquote><h2 id="basic-usage" tabindex="-1"><a class="header-anchor" href="#basic-usage" aria-hidden="true">#</a> Basic Usage</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code>validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">&quot;nullOrUndefined&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token string">&quot;nullOrUndefined&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre></div><h2 id="types-available" tabindex="-1"><a class="header-anchor" href="#types-available" aria-hidden="true">#</a> Types Available</h2><p>All the available types, and examples of usage.</p><h3 id="string" tabindex="-1"><a class="header-anchor" href="#string" aria-hidden="true">#</a> String</h3><p>Validate if the value is a string</p><blockquote><p>return <code>boolean</code></p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code>validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="number" tabindex="-1"><a class="header-anchor" href="#number" aria-hidden="true">#</a> Number</h3><p>Validate if the value is a number</p><blockquote><p>return <code>boolean</code></p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code>validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="boolean" tabindex="-1"><a class="header-anchor" href="#boolean" aria-hidden="true">#</a> Boolean</h3><p>Validate if the value is a boolean</p><blockquote><p>return <code>boolean</code></p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code>validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">&quot;boolean&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">&quot;boolean&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="null" tabindex="-1"><a class="header-anchor" href="#null" aria-hidden="true">#</a> Null</h3><p>Validate if the value is null</p><blockquote><p>return <code>boolean</code></p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code>validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">&quot;null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token string">&quot;null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="undefined" tabindex="-1"><a class="header-anchor" href="#undefined" aria-hidden="true">#</a> Undefined</h3><p>Validate if the value is undefined</p><blockquote><p>return <code>boolean</code></p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code>validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">&quot;undefined&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token string">&quot;undefined&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="nullorundefined" tabindex="-1"><a class="header-anchor" href="#nullorundefined" aria-hidden="true">#</a> NullOrUndefined</h3><p>Validate if the value is null or undefined</p><blockquote><p>return <code>boolean</code></p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code>validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">&quot;nullOrUndefined&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">&quot;nullOrUndefined&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="object" tabindex="-1"><a class="header-anchor" href="#object" aria-hidden="true">#</a> Object</h3><p>Validate if the value is an object</p><blockquote><p>return <code>boolean</code></p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code>validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="array" tabindex="-1"><a class="header-anchor" href="#array" aria-hidden="true">#</a> Array</h3><p>Validate if the value is an array</p><blockquote><p>return <code>boolean</code></p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code>validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">&quot;array&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
validan<span class="token punctuation">.</span><span class="token function">typeOf</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token string">&quot;array&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="advanced-usage" tabindex="-1"><a class="header-anchor" href="#advanced-usage" aria-hidden="true">#</a> Advanced Usage</h2><h3 id="override-types" tabindex="-1"><a class="header-anchor" href="#override-types" aria-hidden="true">#</a> Override types</h3><p>You can override any type within any instance of <code>typeOf proxy</code>.</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>validan<span class="token punctuation">.</span>typeOf<span class="token punctuation">.</span><span class="token function-variable function">array</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">value</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="clone-typeof-instance" tabindex="-1"><a class="header-anchor" href="#clone-typeof-instance" aria-hidden="true">#</a> Clone typeOf instance</h3><p>You can Clone a typeOf instance by using <code>with</code> | <code>create</code></p><blockquote><p><code>with</code> will create a new instance of <code>typeOf proxy</code> with types defined, and types inherited from parent proxy.</p></blockquote><blockquote><p><code>create</code> will create a new instance of <code>typeOf proxy</code> with only the types defined.</p></blockquote><h4 id="clone-using-with" tabindex="-1"><a class="header-anchor" href="#clone-using-with" aria-hidden="true">#</a> Clone using <code>With</code></h4>`,48),U=n("div",{class:"language-javascript ext-js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"const"),a(" withTypeOf "),n("span",{class:"token operator"},"="),a(" validan"),n("span",{class:"token punctuation"},"."),a("typeOf"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"with"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token function-variable function"},"arrayOfArray"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),a(),n("span",{class:"token parameter"},"value"),a(),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"return"),a(" Array"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isArray"),n("span",{class:"token punctuation"},"("),a("value"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"&&"),a(" value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"every"),n("span",{class:"token punctuation"},"("),a("Array"),n("span",{class:"token punctuation"},"."),a("isArray"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("withTypeOf"),n("span",{class:"token punctuation"},"."),a("types"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token comment"},'// [ "string", "number", "boolean", "null", "undefined", ...etc, "arrayOfArray" ]'),a(`

`),n("span",{class:"token function"},"withTypeOf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),a(),n("span",{class:"token punctuation"},"["),a(),n("span",{class:"token string"},'"array"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"of"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"array"'),a(),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"is"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"arrayOfArray"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(),n("span",{class:"token comment"},"// true"),a(`
`)])])],-1),N=n("div",{class:"language-typescript ext-ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"interface"),a(),n("span",{class:"token class-name"},"WithTypeOf"),a(),n("span",{class:"token punctuation"},"{"),a(`
	`),n("span",{class:"token function-variable function"},"arrayOfArray"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),a("value"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token builtin"},"boolean"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token keyword"},"const"),a(" withTypeOf "),n("span",{class:"token operator"},"="),a(" validan"),n("span",{class:"token punctuation"},"."),a("typeOf"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"with"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("WithTypeOf"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(`
	`),n("span",{class:"token function-variable function"},"arrayOfArray"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),a("value"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
		`),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token builtin"},"Array"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isArray"),n("span",{class:"token punctuation"},"("),a("value"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"&&"),a(" value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"every"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"Array"),n("span",{class:"token punctuation"},"."),a("isArray"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token builtin"},"console"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("withTypeOf"),n("span",{class:"token punctuation"},"."),a("types"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token comment"},'// [ "string", "number", "boolean", "null", "undefined", ...etc, "arrayOfArray" ]'),a(`

`),n("span",{class:"token function"},"withTypeOf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"array"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"of"'),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token string"},'"array"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"is"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"arrayOfArray"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(),n("span",{class:"token comment"},"// true"),a(`
`)])])],-1),S=n("h4",{id:"clone-using-create",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#clone-using-create","aria-hidden":"true"},"#"),a(" Clone using "),n("code",null,"Create")],-1),B=n("div",{class:"language-javascript ext-js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"const"),a(" myCustomTypeOf "),n("span",{class:"token operator"},"="),a(" validan"),n("span",{class:"token punctuation"},"."),a("typeOf"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"create"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(`
	`),n("span",{class:"token function-variable function"},"string"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"value"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token keyword"},"typeof"),a(" value "),n("span",{class:"token operator"},"==="),a(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},","),a(`
	`),n("span",{class:"token function-variable function"},"boolean"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"value"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token keyword"},"typeof"),a(" value "),n("span",{class:"token operator"},"==="),a(),n("span",{class:"token string"},'"number"'),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myCustomTypeOf"),n("span",{class:"token punctuation"},"."),a("types"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token comment"},'// [ "string", "boolean" ]'),a(`

`),n("span",{class:"token function"},"myCustomTypeOf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"value"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"is"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token function"},"myCustomTypeOf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"is"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"boolean"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`)])])],-1),G=n("div",{class:"language-typescript ext-ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"interface"),a(),n("span",{class:"token class-name"},"CustomTypes"),a(),n("span",{class:"token punctuation"},"{"),a(`
	`),n("span",{class:"token function-variable function"},"string"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),a("value"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token builtin"},"boolean"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token function-variable function"},"boolean"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),a("value"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token builtin"},"boolean"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token keyword"},"const"),a(" myCustomTypeOf "),n("span",{class:"token operator"},"="),a(" validan"),n("span",{class:"token punctuation"},"."),a("typeOf"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"create"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("CustomTypes"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(`
	`),n("span",{class:"token function-variable function"},"string"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),a("value"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token builtin"},"unknown"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token keyword"},"typeof"),a(" value "),n("span",{class:"token operator"},"==="),a(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},","),a(`
	`),n("span",{class:"token function-variable function"},"boolean"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),a("value"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token builtin"},"unknown"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token keyword"},"typeof"),a(" value "),n("span",{class:"token operator"},"==="),a(),n("span",{class:"token string"},'"number"'),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token builtin"},"console"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myCustomTypeOf"),n("span",{class:"token punctuation"},"."),a("types"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token comment"},'// [ "string", "boolean" ]'),a(`

`),n("span",{class:"token function"},"myCustomTypeOf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"value"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"is"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token function"},"myCustomTypeOf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"is"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"boolean"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`)])])],-1),W=n("h4",{id:"clone-using-both-create-and-with",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#clone-using-both-create-and-with","aria-hidden":"true"},"#"),a(" Clone using Both "),n("code",null,"Create"),a(" and "),n("code",null,"With")],-1),J=n("div",{class:"language-javascript ext-js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"const"),a(" myCustomTypeOf "),n("span",{class:"token operator"},"="),a(" validan"),n("span",{class:"token punctuation"},"."),a("typeOf"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"create"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token function-variable function"},"string"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),a(),n("span",{class:"token parameter"},"value"),a(),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token keyword"},"typeof"),a(" value "),n("span",{class:"token operator"},"==="),a(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},","),a(`
  `),n("span",{class:"token function-variable function"},"boolean"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),a(),n("span",{class:"token parameter"},"value"),a(),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token keyword"},"typeof"),a(" value "),n("span",{class:"token operator"},"==="),a(),n("span",{class:"token string"},'"number"'),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myCustomTypeOf"),n("span",{class:"token punctuation"},"."),a("types"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token comment"},'// [ "string", "boolean" ]'),a(`

`),n("span",{class:"token keyword"},"const"),a(" myCustomTypeOf2 "),n("span",{class:"token operator"},"="),a(" myCustomTypeOf"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"with"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token function-variable function"},"number"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),a(),n("span",{class:"token parameter"},"value"),a(),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token keyword"},"typeof"),a(" value "),n("span",{class:"token operator"},"==="),a(),n("span",{class:"token string"},'"number"'),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`


console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myCustomTypeOf2"),n("span",{class:"token punctuation"},"."),a("types"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token comment"},'// [ "string", "boolean", "number" ]'),a(`
`)])])],-1),I=n("div",{class:"language-typescript ext-ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"interface"),a(),n("span",{class:"token class-name"},"CustomTypes"),a(),n("span",{class:"token punctuation"},"{"),a(`
	`),n("span",{class:"token function-variable function"},"string"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),a("value"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token builtin"},"boolean"),n("span",{class:"token punctuation"},";"),a(`
	`),n("span",{class:"token function-variable function"},"boolean"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),a("value"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token builtin"},"boolean"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token keyword"},"const"),a(" myCustomTypeOf "),n("span",{class:"token operator"},"="),a(" validan"),n("span",{class:"token punctuation"},"."),a("typeOf"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"create"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("CustomTypes"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(`
	`),n("span",{class:"token function-variable function"},"string"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),a("value"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token keyword"},"typeof"),a(" value "),n("span",{class:"token operator"},"==="),a(),n("span",{class:"token string"},'"string"'),n("span",{class:"token punctuation"},","),a(`
	`),n("span",{class:"token function-variable function"},"boolean"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),a("value"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token keyword"},"typeof"),a(" value "),n("span",{class:"token operator"},"==="),a(),n("span",{class:"token string"},'"number"'),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token builtin"},"console"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myCustomTypeOf"),n("span",{class:"token punctuation"},"."),a("types"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`

`),n("span",{class:"token comment"},'// [ "string", "boolean" ]'),a(`

`),n("span",{class:"token keyword"},"interface"),a(),n("span",{class:"token class-name"},"CustomTypes2"),a(),n("span",{class:"token punctuation"},"{"),a(`
	`),n("span",{class:"token function-variable function"},"number"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),a("value"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token builtin"},"boolean"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token keyword"},"const"),a(" myCustomTypeOf2 "),n("span",{class:"token operator"},"="),a(" myCustomTypeOf"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"with"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),a("CustomTypes2"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),a(`
	`),n("span",{class:"token function-variable function"},"number"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),a("value"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token keyword"},"typeof"),a(" value "),n("span",{class:"token operator"},"==="),a(),n("span",{class:"token string"},'"number"'),n("span",{class:"token punctuation"},","),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`


`),n("span",{class:"token builtin"},"console"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("myCustomTypeOf2"),n("span",{class:"token punctuation"},"."),a("types"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token comment"},'// [ "string", "boolean", "number" ]'),a(`
`)])])],-1);function Y(E,z){const o=c("router-link"),e=c("CodeGroupItem"),p=c("CodeGroup");return l(),i("div",null,[d,f,n("nav",y,[n("ul",null,[n("li",null,[s(o,{to:"#constructor"},{default:t(()=>[g]),_:1})]),n("li",null,[s(o,{to:"#basic-usage"},{default:t(()=>[h]),_:1})]),n("li",null,[s(o,{to:"#types-available"},{default:t(()=>[v]),_:1}),n("ul",null,[n("li",null,[s(o,{to:"#string"},{default:t(()=>[b]),_:1})]),n("li",null,[s(o,{to:"#number"},{default:t(()=>[m]),_:1})]),n("li",null,[s(o,{to:"#boolean"},{default:t(()=>[_]),_:1})]),n("li",null,[s(o,{to:"#null"},{default:t(()=>[O]),_:1})]),n("li",null,[s(o,{to:"#undefined"},{default:t(()=>[q]),_:1})]),n("li",null,[s(o,{to:"#nullorundefined"},{default:t(()=>[w]),_:1})]),n("li",null,[s(o,{to:"#object"},{default:t(()=>[j]),_:1})]),n("li",null,[s(o,{to:"#array"},{default:t(()=>[x]),_:1})])])]),n("li",null,[s(o,{to:"#advanced-usage"},{default:t(()=>[C]),_:1}),n("ul",null,[n("li",null,[s(o,{to:"#override-types"},{default:t(()=>[T]),_:1})]),n("li",null,[s(o,{to:"#clone-typeof-instance"},{default:t(()=>[A]),_:1})])])])])]),V,s(p,null,{default:t(()=>[s(e,{title:"JavaScript"},{default:t(()=>[U]),_:1}),s(e,{title:"TypeScript"},{default:t(()=>[N]),_:1})]),_:1}),S,s(p,null,{default:t(()=>[s(e,{title:"JavaScript"},{default:t(()=>[B]),_:1}),s(e,{title:"TypeScript"},{default:t(()=>[G]),_:1})]),_:1}),W,s(p,null,{default:t(()=>[s(e,{title:"JavaScript"},{default:t(()=>[J]),_:1}),s(e,{title:"TypeScript"},{default:t(()=>[I]),_:1})]),_:1})])}var F=u(r,[["render",Y],["__file","typeof.html.vue"]]);export{F as default};
